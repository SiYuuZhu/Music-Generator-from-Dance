  openpose_python.cpp
C:\Users\Mice Army\openpose\include\openpose/flags.hpp(49): warning C4245: '正在初始化': 從 'int' 轉換為 'google::uint64'，signed/unsigned 不相符
c:\users\mice army\openpose\3rdparty\pybind11\include\pybind11\detail/common.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Users\Mice Army\openpose\python\openpose\openpose_python.cpp(497): warning C4100: 'imp': 未參考的型式參數
C:\Users\Mice Army\openpose\python\openpose\openpose_python.cpp(497): warning C4100: 'src': 未參考的型式參數
C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include\xmemory0(881): warning C4244: '正在初始化': 將 '_Ty' 轉換為 '_Objty'，由於類型不同，可能導致資料遺失
          with
          [
              _Ty=Py_ssize_t
          ]
          and
          [
              _Objty=int
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include\xmemory(164): note: 請參閱所要編譯的函式 樣板 具現化 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,__int64&>(_Alloc &,_Objty *const ,__int64 &)' 之參考
          with
          [
              _Alloc=std::allocator<int>,
              _Ty=int,
              _Objty=int
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include\xmemory(164): note: 請參閱所要編譯的函式 樣板 具現化 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,__int64&>(_Alloc &,_Objty *const ,__int64 &)' 之參考
          with
          [
              _Alloc=std::allocator<int>,
              _Ty=int,
              _Objty=int
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include\xmemory(190): note: 請參閱所要編譯的函式 樣板 具現化 'void std::_Uninitialized_backout_al<_FwdIt,_Alloc>::_Emplace_back<_Ty&>(_Ty &)' 之參考
          with
          [
              _FwdIt=int *,
              _Alloc=std::allocator<int>,
              _Ty=Py_ssize_t
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include\xmemory(190): note: 請參閱所要編譯的函式 樣板 具現化 'void std::_Uninitialized_backout_al<_FwdIt,_Alloc>::_Emplace_back<_Ty&>(_Ty &)' 之參考
          with
          [
              _FwdIt=int *,
              _Alloc=std::allocator<int>,
              _Ty=Py_ssize_t
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include\xmemory(217): note: 請參閱所要編譯的函式 樣板 具現化 '_FwdIt std::_Uninitialized_copy_al_unchecked<_Ty*,int*,_Alloc>(_InIt,const _InIt,const _FwdIt,_Alloc &,std::_General_ptr_iterator_tag,std::_Any_tag)' 之參考
          with
          [
              _FwdIt=int *,
              _Ty=Py_ssize_t,
              _Alloc=std::allocator<int>,
              _InIt=Py_ssize_t *
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include\vector(1823): note: 請參閱所要編譯的函式 樣板 具現化 '_FwdIt *std::_Uninitialized_copy<_Iter,int*,std::allocator<_Ty>>(const _InIt,const _InIt,_FwdIt,_Alloc &)' 之參考
          with
          [
              _FwdIt=int *,
              _Iter=__int64 *,
              _Ty=int,
              _InIt=__int64 *,
              _Alloc=std::allocator<int>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include\vector(708): note: 請參閱所要編譯的函式 樣板 具現化 'int *std::vector<int,std::allocator<_Ty>>::_Ucopy<_Iter>(_Iter,_Iter,int *)' 之參考
          with
          [
              _Ty=int,
              _Iter=__int64 *
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include\vector(708): note: 請參閱所要編譯的函式 樣板 具現化 'int *std::vector<int,std::allocator<_Ty>>::_Ucopy<_Iter>(_Iter,_Iter,int *)' 之參考
          with
          [
              _Ty=int,
              _Iter=__int64 *
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include\vector(723): note: 請參閱所要編譯的函式 樣板 具現化 'void std::vector<int,std::allocator<_Ty>>::_Range_construct_or_tidy<__int64*>(_Iter,_Iter,std::forward_iterator_tag)' 之參考
          with
          [
              _Ty=int,
              _Iter=__int64 *
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include\vector(723): note: 請參閱所要編譯的函式 樣板 具現化 'void std::vector<int,std::allocator<_Ty>>::_Range_construct_or_tidy<__int64*>(_Iter,_Iter,std::forward_iterator_tag)' 之參考
          with
          [
              _Ty=int,
              _Iter=__int64 *
          ]
  C:\Users\Mice Army\openpose\python\openpose\openpose_python.cpp(450): note: 請參閱所要編譯的函式 樣板 具現化 'std::vector<int,std::allocator<_Ty>>::vector<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<__int64>>>,void>(_Iter,_Iter,const _Alloc &)' 之參考
          with
          [
              _Ty=int,
              _Iter=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<pybind11::ssize_t>>>,
              _Alloc=std::allocator<int>
          ]
  C:\Users\Mice Army\openpose\python\openpose\openpose_python.cpp(450): note: 請參閱所要編譯的函式 樣板 具現化 'std::vector<int,std::allocator<_Ty>>::vector<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<__int64>>>,void>(_Iter,_Iter,const _Alloc &)' 之參考
          with
          [
              _Ty=int,
              _Iter=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<pybind11::ssize_t>>>,
              _Alloc=std::allocator<int>
          ]
  C:\Users\Mice Army\openpose\python\openpose\openpose_python.cpp(434): note: 查看要編譯的 類別 樣板 具現化 'pybind11::detail::descr<13>' 參考
  c:\users\mice army\openpose\3rdparty\pybind11\include\pybind11\cast.h(1556): note: 查看要編譯的 類別 樣板 具現化 'pybind11::detail::descr<8>' 參考
  c:\users\mice army\openpose\3rdparty\pybind11\include\pybind11\cast.h(1554): note: 查看要編譯的 類別 樣板 具現化 'pybind11::detail::descr<5>' 參考
  c:\users\mice army\openpose\3rdparty\pybind11\include\pybind11\cast.h(1109): note: 查看要編譯的 類別 樣板 具現化 'pybind11::detail::descr<7>' 參考
     正在建立程式庫 C:/Users/Mice Army/openpose/build/python/openpose/Release/pyopenpose.lib 和物件 C:/Users/Mice Army/openpose/build/python/openpose/Release/pyopenpose.exp
  正在產生程式碼
  已完成程式碼產生
  pyopenpose.vcxproj -> C:\Users\Mice Army\openpose\build\python\openpose\Release\pyopenpose.cp38-win_amd64.pyd
